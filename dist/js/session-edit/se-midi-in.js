function onMIDISuccess(e){midiDeviceConnected=!0,midi=e;for(var t=midi.inputs.values(),o=t.next();o&&!o.done;o=t.next())o.value.onmidimessage=onMIDIMessage,listInputs(o);midi.onstatechange=onStateChange}function onMIDIFailure(e){console.log("Shit's broke - midi - ",e)}function onMIDIMessage(e){switch(console.log(e),data=e.data,cmd=data[0]>>4,channel=15&data[0],type=240&data[0],note=data[1],velocity=data[2],type){case 144:noteOn(note,velocity);break;case 128:noteOff(note,velocity)}}function noteOn(e,t){console.log("MIDI Note",e);var o=getClipBox(e,"midi");o&&o.classList.add("active")}function noteOff(e,t){console.log("MIDI Note",e);var o=getClipBox(e,"midi");o&&o.classList.remove("active")}function listInputs(e){var t=e.value;console.log("Input port : [ type:'"+t.type+"' id: '"+t.id+"' manufacturer: '"+t.manufacturer+"' name: '"+t.name+"' version: '"+t.version+"']")}function logger(e){console.log(" [channel: "+(15&e[0])+", cmd: "+(e[0]>>4)+", type: "+(240&e[0])+" , note: "+e[1]+" , velocity: "+e[2]+"]")}function onStateChange(e){var t=e.port,o=t.state,n=t.name,a=t.type;"input"==a&&console.log("name",n,"port",t,"state",o)}var AudioContext=AudioContext||webkitAudioContext,context=new AudioContext,data,cmd,channel,type,note,velocity,midiDeviceConnected=!1;navigator.requestMIDIAccess?navigator.requestMIDIAccess({sysex:!1}).then(onMIDISuccess,onMIDIFailure):console.log("No MIDI support in your browser.");